# -*- coding: utf-8 -*-
"""Notebook2_Manusia Pelupa_ADIKARA2024.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oH32btqnUW4kij_kAM3TZij_GFR4C7du
"""

import pandas as pd
import joblib
import sklearn
import os

print(f"Scikit-learn version: {sklearn.__version__}")

model_path = '../content/Model_Manusia Pelupa_ADIKARA2024.pkl'
data_test_path = '../data/test_adikara2024_unlabeled.csv'
sample_submission_path = '../content/sample_submission_completed.csv'

data_test_path = '../content/test_adikara2024_unlabeled.csv'
model = joblib.load('/content/Model_Manusia Pelupa_ADIKARA2024.pkl')

data_test_path = '../content/test_adikara2024_unlabeled.csv'
df_test = pd.read_csv(data_test_path)
df_test.head()

model_path = '../content/Model_Manusia Pelupa_ADIKARA2024.pkl'
try:
    model = joblib.load(model_path)
    print("Model dimuat dengan sukses dari:", model_path)
except Exception as e:
    print(f"Gagal memuat model: {e}")
    raise

def preprocess_test_data(df, model_features):
    """Pastikan data test memiliki fitur yang sama dengan model."""
    if 'Country' in df.columns:
        df = pd.get_dummies(df, columns=['Country'])

    for feature in model_features:
        if feature not in df.columns:
            df[feature] = 0

    df = df.reindex(columns=model_features, fill_value=0)
    return df

model_feature_names = model.feature_names_in_
df_test_preprocessed = preprocess_test_data(df_test, model_feature_names)

X_columns = [
    'Year', 'Month', 'OtherFeature1', 'OtherFeature2', 'Country_Encoded1', 'Country_Encoded2'
]
df_test_preprocessed = df_test_preprocessed.reindex(columns=X_columns, fill_value=0)
df_test_preprocessed.head()

model_feature_names = model.feature_names_in_
df_test_preprocessed = preprocess_test_data(df_test, model_feature_names)

try:
    predictions = model.predict(df_test_preprocessed)
    print("Prediksi selesai")
except Exception as e:
    print(f"Gagal melakukan prediksi: {e}")
    raise

submission = pd.DataFrame({
    'id': df_test['id'],
    'FoodPriceIndex': predictions
})
submission_file_path = 'submission.csv'
submission.to_csv(submission_file_path, index=False)
print(f"File submission disimpan di {submission_file_path}")

if os.path.exists('../content/submission.csv'):
    sample_submission = pd.read_csv('/content/submission.csv')
    sample_submission['FoodPriceIndex'] = predictions
    sample_submission.to_csv('sample_submission_completed.csv', index=False)
    print("Sample submission file diperbarui dengan prediksi.")
else:
    print("Sample submission file tidak ditemukan.")

submission.head()